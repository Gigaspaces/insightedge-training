{"paragraphs":[{"text":"// Variables - val and var\r\nval msg = \"Hello, world!\"\r\n\r\nvar greeting = \"Hello, world!\"\r\n\r\n","user":"anonymous","dateUpdated":"2020-02-11T10:05:49-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"msg: String = Hello, world!\n"}]},"apps":[],"jobName":"paragraph_1580939312093_-1024650652","id":"20191112-160855_505362252","dateCreated":"2020-02-05T16:48:32-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5293"},{"text":"// Expressions - the value of the block is the value of the last expression\r\nval x: Int = 10\r\nval x0: Int = 5\r\nval y: Int = 20\r\nval y0: Int = 10\r\nval distance = { val dx = x - x0; val dy = y - y0; Math.sqrt(dx * dx + dy * dy) }\r\n\r\n// A block that ends with assignment returns a Unit value\r\nval x = { var n = 5; n -= 1 }","user":"anonymous","dateUpdated":"2020-02-11T10:13:47-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"x: Int = 10\nx0: Int = 5\ny: Int = 20\ny0: Int = 10\ndistance: Double = 11.180339887498949\nx: Unit = ()\n"}]},"apps":[],"jobName":"paragraph_1580939312100_32890949","id":"20191112-161032_389815397","dateCreated":"2020-02-05T16:48:32-0500","dateStarted":"2020-02-11T10:13:47-0500","dateFinished":"2020-02-11T10:13:48-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5294"},{"text":"//functions\r\n\r\ndef min(x: Int, y: Int): Int = {\r\nif (x < y)\r\nx\r\nelse\r\ny\r\n}\r\n\r\nmin(2,1)\r\n","user":"anonymous","dateUpdated":"2020-02-05T16:48:32-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"min: (x: Int, y: Int)Int\r\nres2: Int = 1\n"}]},"apps":[],"jobName":"paragraph_1580939312100_1584257437","id":"20191112-161143_1881262989","dateCreated":"2020-02-05T16:48:32-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5295"},{"text":"//operator overloading\nval age:Int = 10\n\nage.*(0.5)\n\n","user":"anonymous","dateUpdated":"2020-02-05T16:48:32-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"age: Int = 10\r\nres4: Double = 5.0\n"}]},"apps":[],"jobName":"paragraph_1580939312101_-845652751","id":"20191112-161218_1654965421","dateCreated":"2020-02-05T16:48:32-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5296"},{"text":"//infix notation\n\nage * 0.5","user":"anonymous","dateUpdated":"2020-02-05T16:48:32-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res5: Double = 5.0\n"}]},"apps":[],"jobName":"paragraph_1580939312101_-1052163063","id":"20191112-191806_107248144","dateCreated":"2020-02-05T16:48:32-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5297"},{"text":"// String output\n\n\nprint(\"Answer: \")\nprintln(42)\n//yield same output as above\nprintln(\"Answer: \" + 42)\n\n// with formatting\nval name : String =\"saurabh\"\nval age :Int =28\nprintf(\"Hello, %s! You are %d years old.%n\", name, age)\n\n//formatted out put with String interpolation\nprint(f\"Hello, $name! In six months, you'll be ${age + 0.5}%7.2f years old.%n\")\n\n\n//Multi-line output\n\nval myString =\"\"\"Hello\n        my name is\n        George(aka \"ggg\")\"\"\"\n\nprintln(myString)\n\n\nval myString2 = \"\"\" |{\n                    |  \"phone\": \"380999999999\"\n                    |  \"addressFrom\": \"Some Address 1\",\n                    |  \"addressTo\": \"Another Address 2\",\n                    |  \"time\": \"2016-09-02T14:02:18.937Z\"\n                    |}\n\"\"\".stripMargin\n\nprintln(myString2)\n","user":"anonymous","dateUpdated":"2020-02-11T10:29:07-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Answer: 42\nAnswer: 42\nname: String = saurabh\nage: Int = 28\nHello, saurabh! You are 28 years old.\nHello, saurabh! In six months, you'll be   28.50 years old.\nmyString: String =\nHello\n        my name is\n        George(aka \"ggg\")\nHello\n        my name is\n        George(aka \"ggg\")\nmyString2: String =\n\"{\n  \"phone\": \"380999999999\"\n  \"addressFrom\": \"Some Address 1\",\n  \"addressTo\": \"Another Address 2\",\n  \"time\": \"2016-09-02T14:02:18.937Z\"\n}\n\"\n{\n  \"phone\": \"380999999999\"\n  \"addressFrom\": \"Some Address 1\",\n  \"addressTo\": \"Another Address 2\",\n  \"time\": \"2016-09-02T14:02:18.937Z\"\n}\n\n"}]},"apps":[],"jobName":"paragraph_1580939312101_-1739611305","id":"20191112-191916_447523686","dateCreated":"2020-02-05T16:48:32-0500","dateStarted":"2020-02-11T10:28:51-0500","dateFinished":"2020-02-11T10:28:53-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5298"},{"text":"//conditional Expression\r\n\r\nval x = 20\r\n\r\nval y = if (x > 0) 1 else -1\r\n","user":"anonymous","dateUpdated":"2020-02-05T16:48:32-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"x: Int = 20\r\ny: Int = 1\n"}]},"apps":[],"jobName":"paragraph_1580939312102_1121548636","id":"20191112-191956_1697640499","dateCreated":"2020-02-05T16:48:32-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5299"},{"text":"//for loops\n\nval s = \"Hello\"\nvar sum = 0\nfor (i <- 0 to s.length - 1) {\n    //print(s(i).toInt)\n    sum += s(i)\n}\nprintln(\"Sum is: \" + sum)\n\nsum=0\nfor (ch <- \"Hello\")\n    sum += ch\nprintln(\"Sum is: \" + sum)\n","user":"anonymous","dateUpdated":"2020-02-11T10:21:26-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"s: String = Hello\nsum: Int = 0\nSum is: 500\nsum: Int = 0\nSum is: 500\n"}]},"apps":[],"jobName":"paragraph_1580939312102_-1821801857","id":"20191112-192157_2023807953","dateCreated":"2020-02-05T16:48:32-0500","dateStarted":"2020-02-11T10:21:26-0500","dateFinished":"2020-02-11T10:21:28-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5300"},{"text":"//for comprehension with yield\n\n\nval f=for (i <- 1 to 10) yield i % 3\n// Yields Vector(1, 2, 0, 1, 2, 0, 1, 2, 0, 1)\n  \n  ","user":"anonymous","dateUpdated":"2020-02-11T10:29:17-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"f: scala.collection.immutable.IndexedSeq[Int] = Vector(1, 2, 0, 1, 2, 0, 1, 2, 0, 1)\n"}]},"apps":[],"jobName":"paragraph_1580939312103_96022640","id":"20191112-192254_1757982947","dateCreated":"2020-02-05T16:48:32-0500","dateStarted":"2020-02-11T10:09:48-0500","dateFinished":"2020-02-11T10:10:06-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5301"},{"text":"val sqList = for (i <- 1 to 5) yield i*i\nsqList","user":"anonymous","dateUpdated":"2020-02-05T16:48:32-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"sqList: scala.collection.immutable.IndexedSeq[Int] = Vector(1, 4, 9, 16, 25)\r\nres15: scala.collection.immutable.IndexedSeq[Int] = Vector(1, 4, 9, 16, 25)\n"}]},"apps":[],"jobName":"paragraph_1580939312105_-1608796050","id":"20191112-192413_1346073409","dateCreated":"2020-02-05T16:48:32-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5302"},{"text":"// More for examples - using generator\nfor (i <- 1 until 5)\n    print(i+\", \")\n    // Output: 1, 2, 3, 4,\n","user":"anonymous","dateUpdated":"2020-02-11T10:29:27-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1, 2, 3, 4, \r\n5, 4, 3, 2, 1, "}]},"apps":[],"jobName":"paragraph_1580939312112_275606635","id":"20191112-192445_1936638341","dateCreated":"2020-02-05T16:48:32-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5303"},{"text":"// More for examples - using generator with reverse\nfor (i <- (1 to 5).reverse)\n    print(i+\", \")\n// Output: 5, 4, 3, 2, 1,\n","user":"anonymous","dateUpdated":"2020-02-11T10:29:30-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"5, 4, 3, 2, 1, 5, 4, 3, 2, 1, "}]},"apps":[],"jobName":"paragraph_1580939312112_-137911134","id":"20191112-192535_879348721","dateCreated":"2020-02-05T16:48:32-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5304"},{"text":"//More for examples - using generator with by -1\nfor (i <- 5 to 1 by -1)\n    print(i+\", \")","user":"anonymous","dateUpdated":"2020-02-11T10:29:33-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"5, 4, 3, 2, 1, "}]},"apps":[],"jobName":"paragraph_1580939312113_-924247587","id":"20191112-192711_307382786","dateCreated":"2020-02-05T16:48:32-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5305"},{"text":"// More for examples - using multiple generator\r\nfor (i <- 1 to 3; j <- 1 to 2)\r\n    print(i+\",\"+j+\"; \")","user":"anonymous","dateUpdated":"2020-02-11T10:29:44-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1,1; 1,2; 2,1; 2,2; 3,1; 3,2; "}]},"apps":[],"jobName":"paragraph_1580939312113_1848298414","id":"20191112-192727_1843458662","dateCreated":"2020-02-05T16:48:32-0500","dateStarted":"2020-02-11T10:24:56-0500","dateFinished":"2020-02-11T10:24:56-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5306"},{"text":"// tail recursion\nimport scala.annotation.tailrec\n\ndef fibWithTailRec(n: BigInt): BigInt = {\n    @tailrec\n    def innerFib(curr: BigInt, prev: BigInt, next: BigInt): BigInt = {\n      if (curr == 0) prev\n      else innerFib(curr - 1, next, next+prev)\n    }\n    innerFib(n, 1, 1)\n  }\n  \n  fibWithTailRec(10000)\n\n","user":"anonymous","dateUpdated":"2020-02-11T10:26:52-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import scala.annotation.tailrec\r\nfibWithTailRec: (n: BigInt)BigInt\r\nres22: BigInt = 54438373113565281338734260993750380135389184554695967026247715841208582865622349017083051547938960541173822675978026317384359584751116241439174702642959169925586334117906063048089793531476108466259072759367899150677960088306597966641965824937721800381441158841042480997984696487375337180028163763317781927941101369262750979509800713596718023814710669912644214775254478587674568963808002962265133111359929762726679441400101575800043510777465935805362502461707918059226414679005690752321895868142367849593880756423483754386342639635970733756260098962462668746112041739819404875062443709868654315626847186195620146126642232711815040367018825205314845875817193533529827837800351902529239517836689467661917953884712441..."}]},"apps":[],"jobName":"paragraph_1580939312114_579904932","id":"20191112-192741_1210410446","dateCreated":"2020-02-05T16:48:32-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:5307"},{"text":"//Array Example\n\nval nums = new Array[Int](10)\n\n// An array of ten integers, all initialized with 0\nprintln(nums)","user":"anonymous","dateUpdated":"2020-02-11T10:27:13-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"nums: Array[Int] = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n[I@2839882\n"}]},"apps":[],"jobName":"paragraph_1580939312114_-1778095609","id":"20191112-192828_1512050009","dateCreated":"2020-02-05T16:48:32-0500","dateStarted":"2020-02-11T10:27:13-0500","dateFinished":"2020-02-11T10:27:14-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5308"},{"text":"val a = new Array[String](10)\n// A string array with ten elements, all initialized with null\na\n ","user":"anonymous","dateUpdated":"2020-02-11T10:30:40-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"a: Array[String] = Array(null, null, null, null, null, null, null, null, null, null)\nres52: Array[String] = Array(null, null, null, null, null, null, null, null, null, null)\n"}]},"apps":[],"jobName":"paragraph_1580939312115_-1690220368","id":"20191112-193016_1808968406","dateCreated":"2020-02-05T16:48:32-0500","dateStarted":"2020-02-11T10:30:40-0500","dateFinished":"2020-02-11T10:30:40-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5309"},{"text":"val s = Array(\"Hello\", \"World\")\n// An Array[String] of length 2—the type is inferred\n// Note: No new when you supply initial values\ns\n\ns(0) = \"Goodbye\"\n// Array(\"Goodbye\", \"World\")\n// Use () instead of [] to access elements\ns","user":"anonymous","dateUpdated":"2020-02-11T10:32:14-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"s: Array[String] = Array(Hello, World)\nres55: Array[String] = Array(Hello, World)\nres57: Array[String] = Array(Goodbye, World)\n"}]},"apps":[],"jobName":"paragraph_1580939312115_-801045261","id":"20191112-193153_339978280","dateCreated":"2020-02-05T16:48:32-0500","dateStarted":"2020-02-11T10:32:14-0500","dateFinished":"2020-02-11T10:32:15-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5310"},{"user":"anonymous","dateUpdated":"2020-02-11T10:35:43-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580939312116_-535148834","id":"20191112-193206_2137300647","dateCreated":"2020-02-05T16:48:32-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5311","text":"import scala.collection.mutable.ArrayBuffer\nval b = ArrayBuffer[Int]() // Or new ArrayBuffer[Int]\n\nb += 1 // ArrayBuffer(1)\n\n// Add an element at the end with +=\nb += (1, 2, 3, 5) // ArrayBuffer(1, 1, 2, 3, 5)\n\n// Add multiple elements at the end by enclosing them in parentheses\nb ++= Array(8, 13, 21) // ArrayBuffer(1, 1, 2, 3, 5, 8, 13, 21)\n\n// Remove the last five elements\nb.trimEnd(5) // ArrayBuffer(1, 1, 2)\n","dateFinished":"2020-02-11T10:35:45-0500","dateStarted":"2020-02-11T10:35:43-0500","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import scala.collection.mutable.ArrayBuffer\nb: scala.collection.mutable.ArrayBuffer[Int] = ArrayBuffer()\nres58: b.type = ArrayBuffer(1)\nres59: b.type = ArrayBuffer(1, 1, 2, 3, 5)\nres60: b.type = ArrayBuffer(1, 1, 2, 3, 5, 8, 13, 21)\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1581435343511_1973313929","id":"20200211-103543_1069863461","dateCreated":"2020-02-11T10:35:43-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7032","text":"// range examples\nval a = \"Hello, world!\"\n\nfor (i <- 0 until a.length)\n  println(s\"$i: ${a(i)}\")\n\n//To visit every second element, let i traverse...\n\n0 until a.length by 2 // Range(0, 2, 4, ...)\n\n//To visit the elements starting from the end of the array, traverse...\n\n0 until a.length by -1 // Range(..., 2, 1, 0)\n\n// If the array index is not needed in the loop body, the array elements can be visited directly:\nfor (elem <- a)\n  println(elem)\n","dateUpdated":"2020-02-11T10:39:12-0500","dateFinished":"2020-02-11T10:38:07-0500","dateStarted":"2020-02-11T10:38:06-0500","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"a: String = Hello, world!\n0: H\n1: e\n2: l\n3: l\n4: o\n5: ,\n6:  \n7: w\n8: o\n9: r\n10: l\n11: d\n12: !\nres63: scala.collection.immutable.Range = Range(0, 2, 4, 6, 8, 10, 12)\nres64: scala.collection.immutable.Range = Range()\nH\ne\nl\nl\no\n,\n \nw\no\nr\nl\nd\n!\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1581435486471_-782778570","id":"20200211-103806_1100523327","dateCreated":"2020-02-11T10:38:06-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7133","text":"// Map\n// immutable map is default\nval scores = Map(\"John\" -> 20, \"Martin\" -> 30, \"Alice\" -> 7)\n// accessing a value\nval johnScore = scores(\"John\")\n\n// Mutable Map\nval scoresMutable = scala.collection.mutable.Map(\"John\" -> 20, \"Martin\" -> 30, \"Alice\" -> 7)\nscoresMutable(\"John\") = 22 // Updates the existing value for the key \"John\" (assuming scores is mutable)\nscoresMutable(\"Fred\") = 17 // Adds a new key/value pair to scores (assuming it is mutable)\nscoresMutable\n\n// An immutable map cannot be updated. It is only possible to obtain a new map that has the desired update:\n\nval newScores = scores + (\"John\" -> 21, \"Fred\" -> 17) // New map with update\n","dateUpdated":"2020-02-11T10:47:12-0500","dateFinished":"2020-02-11T10:47:13-0500","dateStarted":"2020-02-11T10:47:12-0500","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"scores: scala.collection.immutable.Map[String,Int] = Map(John -> 20, Martin -> 30, Alice -> 7)\njohnScore: Int = 20\nscoresMutable: scala.collection.mutable.Map[String,Int] = Map(Martin -> 30, Alice -> 7, John -> 20)\nres80: scala.collection.mutable.Map[String,Int] = Map(Martin -> 30, Fred -> 17, Alice -> 7, John -> 22)\nnewScores: scala.collection.immutable.Map[String,Int] = Map(John -> 21, Martin -> 30, Alice -> 7, Fred -> 17)\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1581435721830_-1215057183","id":"20200211-104201_852549746","dateCreated":"2020-02-11T10:42:01-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7236","text":"// Iterating over Map\n\nfor ((k, v) <- scores)\n  printf(\"key is : %s, value is : %d\\n\", k, v)","dateUpdated":"2020-02-11T10:55:56-0500","dateFinished":"2020-02-11T10:55:56-0500","dateStarted":"2020-02-11T10:55:56-0500","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"key is : John, value is : 20\nkey is : Martin, value is : 30\nkey is : Alice, value is : 7\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1581437967504_-2018863162","id":"20200211-111927_1202482706","dateCreated":"2020-02-11T11:19:27-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8138","text":"// Match - Basic Example\n\nval dayOfWeek: Int = 2\nval dayOfWeekString: String =\ndayOfWeek match {\n case 0 => \"Sunday\"\n case 1 => \"Monday\"\n case 2 => \"Tuesday\"\n case 3 => \"Wednesday\"\n case 4 => \"Thursday\"\n case 5 => \"Friday\"\n case 6 => \"Saturday\"\n case _ => \"Invalid month\"\n}\n\ndayOfWeekString\n","dateUpdated":"2020-02-11T11:23:24-0500","dateFinished":"2020-02-11T11:23:24-0500","dateStarted":"2020-02-11T11:23:24-0500","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dayOfWeek: Int = 2\ndayOfWeekString: String = Tuesday\nres118: String = Tuesday\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1581436455917_2000053745","id":"20200211-105415_925681651","dateCreated":"2020-02-11T10:54:15-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7495","text":"// Pattern matching - demonstrating guard clause\n\nval ch = '9'\nvar digit = 0\nvar sign = 999\n\nch match {\ncase _ if Character.isDigit(ch) => digit = Character.digit(ch, 10)\ncase '+' => sign = 1\ncase '-' => sign = -1\ncase _ => sign = 0\n}\n\ndigit\nsign\n","dateUpdated":"2020-02-11T11:04:10-0500","dateFinished":"2020-02-11T11:04:11-0500","dateStarted":"2020-02-11T11:04:10-0500","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"ch: Char = 9\ndigit: Int = 0\nsign: Int = 999\nres112: Int = 9\nres113: Int = 999\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1581436668779_1545263862","id":"20200211-105748_1189629795","dateCreated":"2020-02-11T10:57:48-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7737","text":"// Pattern matching - type matching\nval bigInt: BigInt = 0\n\nval arr = Array (\"1\", 2, bigInt)\n\nval obj = arr(0)\nobj match {\ncase x: Int => x\ncase s: String => Integer.parseInt(s)\ncase _: BigInt => Int.MaxValue\ncase _ => 0\n}\n\n","dateUpdated":"2020-02-11T11:56:20-0500","dateFinished":"2020-02-11T11:56:20-0500","dateStarted":"2020-02-11T11:56:20-0500","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"bigInt: BigInt = 0\narr: Array[Any] = Array(1, 2, 0)\nobj: Any = 1\nres127: Int = 1\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1581440039946_-911586098","id":"20200211-115359_464326196","dateCreated":"2020-02-11T11:53:59-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8314","text":"// Pattern matching - Lists\n\nval list: List[Int] = List(1, 2)\n\nlist match {\ncase List(0) => \"0\"\ncase List(x, y) => s\"$x $y\"\ncase List(0, _*) => \"0 ...\"\ncase _ => \"something else\"\n}\n","dateUpdated":"2020-02-11T12:00:38-0500","dateFinished":"2020-02-11T12:00:39-0500","dateStarted":"2020-02-11T12:00:38-0500","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"list: List[Int] = List(1, 2)\nres138: String = 1 2\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1581440280103_-1923550166","id":"20200211-115800_746244858","dateCreated":"2020-02-11T11:58:00-0500","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8622"}],"name":"Lab 3.1 - Introduction to Scala","id":"2F29RMEW6","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}