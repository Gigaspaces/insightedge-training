{
  "paragraphs": [
    {
      "text": "%md\n\n## Introduction\n\nGraphX is the Spark API for graph processing. \n\nIt provides a wrapper around an RDD called **resilient distributed property graph**. \n\n_The property graph is a directed multigraph with properties attached to each vertex and edge._\n",
      "user": "anonymous",
      "dateUpdated": "2019-06-20T10:56:13-0400",
      "config": {
        "editorSetting": {},
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1561042257516_1415590306",
      "id": "20160907-140811_5272388",
      "dateCreated": "2019-06-20T10:50:57-0400",
      "dateStarted": "2019-06-20T10:56:13-0400",
      "dateFinished": "2019-06-20T10:56:16-0400",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:5217"
    },
    {
      "title": "Example Graph",
      "text": "%spark\n\nimport org.apache.spark.graphx.Edge\nimport org.apache.spark.graphx.Graph\n\ncase class Person(name:String, age:Int)\n\nval vertices = sc.parallelize(Array(\n\t(1L, Person(\"John\", 39)), \n\t(2L, Person(\"Alice\", 39)), \n\t(3L, Person(\"Peter\", 12)), \n\t(4L, Person(\"Susan\", 12))\n))\n\nval edges = sc.parallelize(Array(\n\tEdge(3L, 4L, \"friend\"),\n\tEdge(1L, 3L, \"father\"), \n\tEdge(2L, 3L, \"mother\"),\n\tEdge(1L, 2L, \"marriedTo\")\n))\n\nval graph = Graph(vertices, edges)\n\ngraph.vertices.count()\n\ngraph.vertices.collect().foreach(println(_))\n\ngraph.edges.count()\n\ngraph.edges.collect().foreach(println(_))\n",
      "user": "anonymous",
      "dateUpdated": "2019-06-20T10:56:17-0400",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://10.128.162.102:4040/jobs/job?id=0",
            "http://10.128.162.102:4040/jobs/job?id=1",
            "http://10.128.162.102:4040/jobs/job?id=2",
            "http://10.128.162.102:4040/jobs/job?id=3"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1561042257521_577955940",
      "id": "20180415-211354_1326985759",
      "dateCreated": "2019-06-20T10:50:57-0400",
      "dateStarted": "2019-06-20T10:56:17-0400",
      "dateFinished": "2019-06-20T10:56:41-0400",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:5218"
    },
    {
      "title": "Graph Reversal example",
      "text": "%spark\n\nval reversedGraph = graph.reverse\n\nreversedGraph.vertices.collect().foreach(println(_))\nreversedGraph.edges.collect().foreach(println(_))\n",
      "user": "anonymous",
      "dateUpdated": "2019-06-20T10:56:38-0400",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://10.128.162.102:4040/jobs/job?id=4",
            "http://10.128.162.102:4040/jobs/job?id=5"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1561042257521_1125597358",
      "id": "20180416-135844_127754365",
      "dateCreated": "2019-06-20T10:50:57-0400",
      "dateStarted": "2019-06-20T10:56:38-0400",
      "dateFinished": "2019-06-20T10:56:42-0400",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:5219"
    },
    {
      "title": "Mapping Edges and Vertices",
      "text": "%spark\n\nval newgraph1 = graph.mapVertices(\n    (vId, vData) => {\n        vData match {\n            case Person(name, age) => Person(name.toUpperCase(), age)\n        }\n    }\n)\n\nnewgraph1.vertices.collect().foreach(println(_))\n\ncase class Relationship(relation:String)\n\nval newgraph2 = graph.mapEdges(\n    (partId, iter) => iter.map(edge => Relationship(edge.attr))\n)\n\nnewgraph2.edges.collect().foreach(println(_))\n\ncase class PersonExt(name:String, age:Int, children:Int=0, friends:Int=0, married:Boolean=false)\n\n",
      "user": "anonymous",
      "dateUpdated": "2019-06-20T10:56:45-0400",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://10.128.162.102:4040/jobs/job?id=6",
            "http://10.128.162.102:4040/jobs/job?id=7"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1561042257523_1080631794",
      "id": "20180416-130727_2002371610",
      "dateCreated": "2019-06-20T10:50:57-0400",
      "dateStarted": "2019-06-20T10:56:45-0400",
      "dateFinished": "2019-06-20T10:56:48-0400",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:5220"
    },
    {
      "title": "Describing the relationships in more verbose manner",
      "text": "%spark\n\ngraph.triplets.map(\n  triplet => triplet.srcAttr + \" is the \" + triplet.attr + \" of \" + triplet.dstAttr\n).collect.foreach(println(_))\n",
      "user": "anonymous",
      "dateUpdated": "2019-06-20T10:56:52-0400",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://10.128.162.102:4040/jobs/job?id=8"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1561042257525_-1016866026",
      "id": "20180416-133645_1367509927",
      "dateCreated": "2019-06-20T10:50:57-0400",
      "dateStarted": "2019-06-20T10:56:52-0400",
      "dateFinished": "2019-06-20T10:56:53-0400",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:5221"
    },
    {
      "title": "InDegrees, Outdegress and Degrees",
      "text": "%spark\n\nprintln(\"In Degrees of Vertices\")\ngraph.inDegrees.collect().foreach(println(_))\n\nprintln(\"Out Degrees of Vertices\")\ngraph.outDegrees.collect().foreach(println(_))\n\nprintln(\"Degrees of Vertices\")\ngraph.degrees.collect().foreach(println(_))\n\nprintln(\"Vertices with a fan-in more than 1\")\nval x = graph.inDegrees.filter( vertex =>\n    vertex match { \n        case(vId, inDegree) => inDegree > 1\n    }\n)\nx.collect().foreach(println(_))\n\nprintln(\"Vertices with a fan-out more than 1\")\nval y = graph.outDegrees.filter( vertex =>\n    vertex match { \n        case(vId, outDegree) => outDegree > 1\n    }\n)\ny.collect().foreach(println(_))\n\n",
      "user": "anonymous",
      "dateUpdated": "2019-06-20T10:56:56-0400",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://10.128.162.102:4040/jobs/job?id=9",
            "http://10.128.162.102:4040/jobs/job?id=10",
            "http://10.128.162.102:4040/jobs/job?id=11",
            "http://10.128.162.102:4040/jobs/job?id=12",
            "http://10.128.162.102:4040/jobs/job?id=13"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1561042257528_-1509517303",
      "id": "20180416-133904_614567139",
      "dateCreated": "2019-06-20T10:50:57-0400",
      "dateStarted": "2019-06-20T10:56:56-0400",
      "dateFinished": "2019-06-20T10:56:58-0400",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:5222"
    },
    {
      "title": "Aggregating Messages",
      "text": "%spark\n\nimport org.apache.spark.graphx.EdgeContext\n\n\nval newGraphExt = newgraph2.mapVertices((vid, person) => PersonExt(person.name, person.age))\n\nnewGraphExt.vertices.collect().foreach(println(_))\n\nval aggVertices = newGraphExt.aggregateMessages((ctx:EdgeContext[PersonExt, Relationship, Tuple3[Int, Int, Boolean]]) => {\n        if(ctx.attr.relation == \"marriedTo\")\n        { ctx.sendToSrc((0, 0, true)); ctx.sendToDst((0, 0, true)); }\n        else if(ctx.attr.relation == \"mother\" || ctx.attr.relation == \"father\")\n        { ctx.sendToDst((1, 0, false)); }\n        else if(ctx.attr.relation.contains(\"friend\"))\n        { ctx.sendToDst((0, 1, false)); ctx.sendToSrc((0, 1, false));}\n    },\n    (msg1:Tuple3[Int, Int, Boolean], msg2:Tuple3[Int, Int, Boolean]) =>\n        (msg1._1+msg2._1, msg1._2+msg2._2, msg1._3 || msg2._3)\n)\n\naggVertices.collect.foreach(println(_))\n",
      "user": "anonymous",
      "dateUpdated": "2019-06-20T10:57:01-0400",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://10.128.162.102:4040/jobs/job?id=14",
            "http://10.128.162.102:4040/jobs/job?id=15"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1561042257529_-1341103880",
      "id": "20180416-143522_1109948344",
      "dateCreated": "2019-06-20T10:50:57-0400",
      "dateStarted": "2019-06-20T10:57:01-0400",
      "dateFinished": "2019-06-20T10:57:03-0400",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:5223"
    }
  ],
  "name": "Lab 13.1 Example - GraphX Creation Structural Operators",
  "id": "2EEVRMFK4",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}
