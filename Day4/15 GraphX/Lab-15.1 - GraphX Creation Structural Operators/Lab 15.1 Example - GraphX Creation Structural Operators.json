{"paragraphs":[{"text":"%md\n\n## Introduction\n\nGraphX is the Spark API for graph processing. \n\nIt provides a wrapper around an RDD called **resilient distributed property graph**. \n\n_The property graph is a directed multigraph with properties attached to each vertex and edge._\n","user":"anonymous","dateUpdated":"2019-01-08T09:41:48+0200","config":{"editorSetting":{},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Introduction</h2>\n<p>GraphX is the Spark API for graph processing. </p>\n<p>It provides a wrapper around an RDD called <strong>resilient distributed property graph</strong>. </p>\n<p><em>The property graph is a directed multigraph with properties attached to each vertex and edge.</em></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1546264844765_-1175940704","id":"20160907-140811_5272388","dateCreated":"2018-12-31T16:00:44+0200","dateStarted":"2019-01-08T09:41:48+0200","dateFinished":"2019-01-08T09:41:48+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5390"},{"title":"Example Graph","text":"%spark\n\nimport org.apache.spark.graphx.Edge\nimport org.apache.spark.graphx.Graph\n\ncase class Person(name:String, age:Int)\n\nval vertices = sc.parallelize(Array(\n\t(1L, Person(\"John\", 39)), \n\t(2L, Person(\"Alice\", 39)), \n\t(3L, Person(\"Peter\", 12)), \n\t(4L, Person(\"Susan\", 12))\n))\n\nval edges = sc.parallelize(Array(\n\tEdge(3L, 4L, \"friend\"),\n\tEdge(1L, 3L, \"father\"), \n\tEdge(2L, 3L, \"mother\"),\n\tEdge(1L, 2L, \"marriedTo\")\n))\n\nval graph = Graph(vertices, edges)\n\ngraph.vertices.count()\n\ngraph.vertices.collect().foreach(println(_))\n\ngraph.edges.count()\n\ngraph.edges.collect().foreach(println(_))\n","user":"anonymous","dateUpdated":"2019-01-08T10:55:02+0200","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.graphx.Edge\nimport org.apache.spark.graphx.Graph\ndefined class Person\nvertices: org.apache.spark.rdd.RDD[(Long, Person)] = ParallelCollectionRDD[78] at parallelize at <console>:34\nedges: org.apache.spark.rdd.RDD[org.apache.spark.graphx.Edge[String]] = ParallelCollectionRDD[79] at parallelize at <console>:32\ngraph: org.apache.spark.graphx.Graph[Person,String] = org.apache.spark.graphx.impl.GraphImpl@4b94bea4\nres33: Long = 4\n(4,Person(Susan,12))\n(1,Person(John,39))\n(2,Person(Alice,39))\n(3,Person(Peter,12))\nres35: Long = 4\nEdge(3,4,friend)\nEdge(1,3,father)\nEdge(2,3,mother)\nEdge(1,2,marriedTo)\n"}]},"apps":[],"jobName":"paragraph_1546264844783_-977616266","id":"20180415-211354_1326985759","dateCreated":"2018-12-31T16:00:44+0200","dateStarted":"2019-01-08T10:55:02+0200","dateFinished":"2019-01-08T10:55:07+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5391","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.9.185:4041/jobs/job?id=18","http://192.168.9.185:4041/jobs/job?id=19","http://192.168.9.185:4041/jobs/job?id=20","http://192.168.9.185:4041/jobs/job?id=21"],"interpreterSettingId":"spark"}}},{"title":"Graph Reversal example","text":"%spark\n\nval reversedGraph = graph.reverse\n\nreversedGraph.vertices.collect().foreach(println(_))\nreversedGraph.edges.collect().foreach(println(_))\n","user":"anonymous","dateUpdated":"2019-01-08T10:04:26+0200","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"reversedGraph: org.apache.spark.graphx.Graph[Person,String] = org.apache.spark.graphx.impl.GraphImpl@5252f0e1\n(4,Person(Susan,12))\n(1,Person(John,39))\n(2,Person(Alice,39))\n(3,Person(Peter,12))\nEdge(3,4,friend)\nEdge(1,3,father)\nEdge(2,3,mother)\nEdge(2,1,marriedTo)\n"}]},"apps":[],"jobName":"paragraph_1546264844784_535717975","id":"20180416-135844_127754365","dateCreated":"2018-12-31T16:00:44+0200","dateStarted":"2019-01-08T10:04:26+0200","dateFinished":"2019-01-08T10:04:28+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5392","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.9.185:4041/jobs/job?id=4","http://192.168.9.185:4041/jobs/job?id=5"],"interpreterSettingId":"spark"}}},{"title":"Mapping Edges and Vertices","text":"%spark\n\nval newgraph1 = graph.mapVertices(\n    (vId, vData) => {\n        vData match {\n            case Person(name, age) => Person(name.toUpperCase(), age)\n        }\n    }\n)\n\nnewgraph1.vertices.collect().foreach(println(_))\n\ncase class Relationship(relation:String)\n\nval newgraph2 = graph.mapEdges(\n    (partId, iter) => iter.map(edge => Relationship(edge.attr))\n)\n\nnewgraph2.edges.collect().foreach(println(_))\n\ncase class PersonExt(name:String, age:Int, children:Int=0, friends:Int=0, married:Boolean=false)\n\n","user":"anonymous","dateUpdated":"2019-01-08T10:04:31+0200","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"newgraph1: org.apache.spark.graphx.Graph[Person,String] = org.apache.spark.graphx.impl.GraphImpl@3d5b4276\n(4,Person(SUSAN,12))\n(1,Person(JOHN,39))\n(2,Person(ALICE,39))\n(3,Person(PETER,12))\ndefined class Relationship\nnewgraph2: org.apache.spark.graphx.Graph[Person,Relationship] = org.apache.spark.graphx.impl.GraphImpl@3210e289\nEdge(4,3,Relationship(friend))\nEdge(3,1,Relationship(father))\nEdge(3,2,Relationship(mother))\nEdge(1,2,Relationship(marriedTo))\ndefined class PersonExt\n"}]},"apps":[],"jobName":"paragraph_1546264844784_1081800819","id":"20180416-130727_2002371610","dateCreated":"2018-12-31T16:00:44+0200","dateStarted":"2019-01-08T10:04:31+0200","dateFinished":"2019-01-08T10:04:34+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5393","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.9.185:4041/jobs/job?id=6","http://192.168.9.185:4041/jobs/job?id=7"],"interpreterSettingId":"spark"}}},{"title":"Describing the relationships in more verbose manner","text":"%spark\n\ngraph.triplets.map(\n  triplet => triplet.srcAttr + \" is the \" + triplet.attr + \" of \" + triplet.dstAttr\n).collect.foreach(println(_))\n","user":"anonymous","dateUpdated":"2019-01-08T10:04:37+0200","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Person(Susan,12) is the friend of Person(Peter,12)\nPerson(Peter,12) is the father of Person(John,39)\nPerson(Peter,12) is the mother of Person(Alice,39)\nPerson(John,39) is the marriedTo of Person(Alice,39)\n"}]},"apps":[],"jobName":"paragraph_1546264844784_757986369","id":"20180416-133645_1367509927","dateCreated":"2018-12-31T16:00:44+0200","dateStarted":"2019-01-08T10:04:37+0200","dateFinished":"2019-01-08T10:04:38+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5394","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.9.185:4041/jobs/job?id=8"],"interpreterSettingId":"spark"}}},{"title":"InDegrees, Outdegress and Degrees","text":"%spark\n\nprintln(\"In Degrees of Vertices\")\ngraph.inDegrees.collect().foreach(println(_))\n\nprintln(\"Out Degrees of Vertices\")\ngraph.outDegrees.collect().foreach(println(_))\n\nprintln(\"Degrees of Vertices\")\ngraph.degrees.collect().foreach(println(_))\n\nprintln(\"Vertices with a fan-in more than 1\")\nval x = graph.inDegrees.filter( vertex =>\n    vertex match { \n        case(vId, inDegree) => inDegree > 1\n    }\n)\nx.collect().foreach(println(_))\n\nprintln(\"Vertices with a fan-out more than 1\")\nval x = graph.outDegrees.filter( vertex =>\n    vertex match { \n        case(vId, outDegree) => outDegree > 1\n    }\n)\nx.collect().foreach(println(_))\n\n","user":"anonymous","dateUpdated":"2019-01-08T10:04:43+0200","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"In Degrees of Vertices\n(1,1)\n(2,2)\n(3,1)\nOut Degrees of Vertices\n(4,1)\n(1,1)\n(3,2)\nDegrees of Vertices\n(4,1)\n(1,2)\n(2,2)\n(3,3)\nVertices with a fan-in more than 1\nx: org.apache.spark.graphx.VertexRDD[Int] = VertexRDDImpl[55] at RDD at VertexRDD.scala:57\n(2,2)\nVertices with a fan-out more than 1\nx: org.apache.spark.graphx.VertexRDD[Int] = VertexRDDImpl[57] at RDD at VertexRDD.scala:57\n(3,2)\n"}]},"apps":[],"jobName":"paragraph_1546264844785_-1790712731","id":"20180416-133904_614567139","dateCreated":"2018-12-31T16:00:44+0200","dateStarted":"2019-01-08T10:04:43+0200","dateFinished":"2019-01-08T10:04:48+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5395","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.9.185:4041/jobs/job?id=9","http://192.168.9.185:4041/jobs/job?id=10","http://192.168.9.185:4041/jobs/job?id=11","http://192.168.9.185:4041/jobs/job?id=12","http://192.168.9.185:4041/jobs/job?id=13"],"interpreterSettingId":"spark"}}},{"title":"Aggregating Messages","text":"%spark\n\nimport org.apache.spark.graphx.EdgeContext\n\n\nval newGraphExt = newgraph2.mapVertices((vid, person) => PersonExt(person.name, person.age))\n\nnewGraphExt.vertices.collect().foreach(println(_))\n\nval aggVertices = newGraphExt.aggregateMessages((ctx:EdgeContext[PersonExt, Relationship, Tuple3[Int, Int, Boolean]]) => {\n        if(ctx.attr.relation == \"marriedTo\")\n        { ctx.sendToSrc((0, 0, true)); ctx.sendToDst((0, 0, true)); }\n        else if(ctx.attr.relation == \"mother\" || ctx.attr.relation == \"father\")\n        { ctx.sendToDst((1, 0, false)); }\n        else if(ctx.attr.relation.contains(\"friend\"))\n        { ctx.sendToDst((0, 1, false)); ctx.sendToSrc((0, 1, false));}\n    },\n    (msg1:Tuple3[Int, Int, Boolean], msg2:Tuple3[Int, Int, Boolean]) =>\n        (msg1._1+msg2._1, msg1._2+msg2._2, msg1._3 || msg2._3)\n)\n\naggVertices.collect.foreach(println(_))\n","user":"anonymous","dateUpdated":"2019-01-08T10:07:19+0200","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.graphx.EdgeContext\nnewGraphExt: org.apache.spark.graphx.Graph[PersonExt,Relationship] = org.apache.spark.graphx.impl.GraphImpl@467977c1\n(4,PersonExt(Susan,12,0,0,false))\n(1,PersonExt(John,39,0,0,false))\n(2,PersonExt(Alice,39,0,0,false))\n(3,PersonExt(Peter,12,0,0,false))\naggVertices: org.apache.spark.graphx.VertexRDD[(Int, Int, Boolean)] = VertexRDDImpl[77] at RDD at VertexRDD.scala:57\n(4,(0,1,false))\n(1,(1,0,true))\n(2,(1,0,true))\n(3,(0,1,false))\n"}]},"apps":[],"jobName":"paragraph_1546264844786_-458230993","id":"20180416-143522_1109948344","dateCreated":"2018-12-31T16:00:44+0200","dateStarted":"2019-01-08T10:07:19+0200","dateFinished":"2019-01-08T10:07:21+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5396","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.9.185:4041/jobs/job?id=16","http://192.168.9.185:4041/jobs/job?id=17"],"interpreterSettingId":"spark"}}},{"text":"%spark\n","user":"anonymous","dateUpdated":"2019-01-08T10:05:51+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1546934751173_704234490","id":"20190108-100551_408042206","dateCreated":"2019-01-08T10:05:51+0200","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6502"}],"name":"Lab 15.1 Example - GraphX Creation Structural Operators","id":"2DZWHPGQF","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}