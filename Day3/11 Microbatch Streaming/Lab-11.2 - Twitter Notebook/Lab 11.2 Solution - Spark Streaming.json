{"paragraphs":[{"text":"%dep\n\nz.load(\"org.apache.spark:spark-streaming_2.10:1.6.2\")\nz.load(\"org.apache.spark:spark-streaming-twitter_2.10:1.6.2\")\nz.load(\"org.twitter4j:twitter4j-core:4.0.5\")\n","user":"anonymous","dateUpdated":"2019-01-23T14:36:44-0500","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"fontSize":9,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@1adc08ce\n"}]},"apps":[],"jobName":"paragraph_1548270826345_-1959375460","id":"20160830-145728_362255206","dateCreated":"2019-01-23T14:13:46-0500","dateStarted":"2019-01-23T14:36:44-0500","dateFinished":"2019-01-23T14:36:56-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:367"},{"text":"%md\n\n<p>\nDevelop a Spark Streaming application that picks up Twitter postings containing hashtags matching any of the following words\n</p>\n\n<p>\n<b>\n\"xap\", \"insightedge\", \"nodejs\", \"docker\", \"tdd\", \"java\", \"scala\", \"ruby\", \"golang\"\n</b>\n</p>\n\n<p>\nand prints a count for each hashtag of the tweets mentioning that word.\n</p>","user":"anonymous","dateUpdated":"2019-01-23T14:36:54-0500","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"fontSize":9,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>\nDevelop a Spark Streaming application that picks up Twitter postings containing hashtags matching any of the following words\n</p>\n<p>\n<b>\n\"xap\", \"insightedge\", \"nodejs\", \"docker\", \"tdd\", \"java\", \"scala\", \"ruby\", \"golang\"\n</b>\n</p>\n<p>\nand prints a count for each hashtag of the tweets mentioning that word.\n</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1548270826351_-1256270537","id":"20170116-131654_997844638","dateCreated":"2019-01-23T14:13:46-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:368","dateFinished":"2019-01-23T14:36:58-0500","dateStarted":"2019-01-23T14:36:54-0500"},{"title":"Solution","text":"%spark\n\nimport org.apache.spark._\nimport org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.storage.StorageLevel\n\nval consumerKey = \"aXbCpq9Zru7UimHAfnzVA\"\nval consumerSecret = \"NlXxNAv1hHR9RUxm5o9WMiSBnzNJV7RpWGzffixKQ\"\nval accessToken = \"28462935-f9vhPSCfDd6BlMefL4hbReDgbLp1c6FME72nJIlIi\"\nval accessTokenSecret = \"nELm7MW28sBhJt7F3lqQr0pWVnCzrewMmx3WFlq2W0\"\n\nSystem.setProperty(\"twitter4j.oauth.consumerKey\", consumerKey)\nSystem.setProperty(\"twitter4j.oauth.consumerSecret\", consumerSecret)\nSystem.setProperty(\"twitter4j.oauth.accessToken\", accessToken)\nSystem.setProperty(\"twitter4j.oauth.accessTokenSecret\", accessTokenSecret)\n\nval ssc = new StreamingContext(sc, Seconds(15))\nssc.checkpoint(\"/tmp/checkpoint\")\n\nval filters = Seq(\"xap\", \"insightedge\", \"nodejs\", \"docker\", \"tdd\", \"java\", \"scala\", \"ruby\", \"golang\")\n\nval tweets = TwitterUtils.createStream(ssc, None, filters, StorageLevel.MEMORY_ONLY_SER_2)\n\nval tweetsFilteredByLang = tweets.filter(t => t.getLang() == \"en\")\n\nval statuses = tweetsFilteredByLang.map(t => t.getText())\n\nval words = statuses.flatMap{status => status.split(\"\"\"\\s+\"\"\")}\n\nval hashTags = words.filter{word => word.startsWith(\"#\")}\n\nval hashTagPairs = hashTags.map{hashtag => (hashtag, 1)}\n\nval tagsWithCounts = hashTagPairs.updateStateByKey( (counts: Seq[Int], prevCount: Option[Int]) =>\n    prevCount.map{c => c + counts.sum}.orElse{Some(counts.sum)}\n)\n\ntagsWithCounts.print()\n\nssc.start()\n","user":"anonymous","dateUpdated":"2019-01-23T14:36:59-0500","config":{"tableHide":false,"colWidth":12,"editorMode":"ace/mode/scala","title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"fontSize":9,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark._\nimport org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.storage.StorageLevel\nconsumerKey: String = aXbCpq9Zru7UimHAfnzVA\nconsumerSecret: String = NlXxNAv1hHR9RUxm5o9WMiSBnzNJV7RpWGzffixKQ\naccessToken: String = 28462935-f9vhPSCfDd6BlMefL4hbReDgbLp1c6FME72nJIlIi\naccessTokenSecret: String = nELm7MW28sBhJt7F3lqQr0pWVnCzrewMmx3WFlq2W0\nres4: String = null\nres5: String = null\nres6: String = null\nres7: String = null\nssc: org.apache.spark.streaming.StreamingContext = org.apache.spark.streaming.StreamingContext@62ba6619\nfilters: Seq[String] = List(xap, insightedge, nodejs, docker, tdd, java, scala, ruby, golang)\ntweets: org.apache.spark.streaming.dstream.ReceiverInputDStream[twitter4j.Status] = org.apache.spark.streaming.twitter.TwitterInputDStream@7a1a7b66\ntweetsFilteredByLang: org.apache.spark.streaming.dstream.DStream[twitter4j.Status] = org.apache.spark.streaming.dstream.FilteredDStream@75290e28\nstatuses: org.apache.spark.streaming.dstream.DStream[String] = org.apache.spark.streaming.dstream.MappedDStream@3183de5b\nwords: org.apache.spark.streaming.dstream.DStream[String] = org.apache.spark.streaming.dstream.FlatMappedDStream@67084c90\nhashTags: org.apache.spark.streaming.dstream.DStream[String] = org.apache.spark.streaming.dstream.FilteredDStream@3df4dcec\nhashTagPairs: org.apache.spark.streaming.dstream.DStream[(String, Int)] = org.apache.spark.streaming.dstream.MappedDStream@603bfced\ntagsWithCounts: org.apache.spark.streaming.dstream.DStream[(String, Int)] = org.apache.spark.streaming.dstream.StateDStream@2b41dda4\n"}]},"apps":[],"jobName":"paragraph_1548270826352_-684612341","id":"20160825-135423_1775581826","dateCreated":"2019-01-23T14:13:46-0500","dateStarted":"2019-01-23T14:36:59-0500","dateFinished":"2019-01-23T14:37:21-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:369"},{"text":"%spark\n\nssc.stop(stopSparkContext=false, stopGracefully=true)\n","user":"anonymous","dateUpdated":"2019-01-23T14:37:30-0500","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"fontSize":9,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548270826352_-1580615460","id":"20160825-133825_16834077","dateCreated":"2019-01-23T14:13:46-0500","status":"RUNNING","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:370","dateStarted":"2019-01-23T14:37:30-0500"},{"user":"anonymous","dateUpdated":"2019-01-23T14:13:46-0500","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"fontSize":9,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1548270826353_-642927986","id":"20160830-151349_1041624973","dateCreated":"2019-01-23T14:13:46-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:371"}],"name":"Lab 11.2 Solution - Spark Streaming","id":"2E3AVFFPM","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}