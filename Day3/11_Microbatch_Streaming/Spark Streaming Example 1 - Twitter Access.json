{"paragraphs":[{"text":"%dep\n\nz.load(\"org.apache.spark:spark-streaming_2.10:1.6.2\")\nz.load(\"org.apache.spark:spark-streaming-twitter_2.10:1.6.2\")\nz.load(\"org.twitter4j:twitter4j-core:4.0.5\")\n","dateUpdated":"2017-02-27T00:32:55-0500","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486670721901_1653728452","id":"20160830-145728_362255206","dateCreated":"2017-02-09T03:05:21-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4146","dateFinished":"2017-02-27T00:33:04-0500","dateStarted":"2017-02-27T00:32:55-0500","result":{"code":"SUCCESS","type":"TEXT","msg":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@10ee8f6d\n"},"focus":true},{"title":"Application showing tweeter messages containing matching words","text":"%spark\n\nimport org.apache.spark._\nimport org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.storage.StorageLevel\n\nval consumerKey = \"MYhSeverFcNomsZVK9rf97rtL\"\nval consumerSecret = \"PUr7MkkJQhFhO2Rb3CTax7NaZUpjHIVwQ5GcaQHad4QgmA7kNK\"\nval accessToken = \"829721281968877569-e8b48xjJDNRMALDPZwyU6Dl2VSIq2JQ\"\nval accessTokenSecret = \"0lk1ohTrHJeWUHhn76hlo4N5U16tIgM6A9Dm2Y8EKYuZp\"\n\nSystem.setProperty(\"twitter4j.oauth.consumerKey\", consumerKey)\nSystem.setProperty(\"twitter4j.oauth.consumerSecret\", consumerSecret)\nSystem.setProperty(\"twitter4j.oauth.accessToken\", accessToken)\nSystem.setProperty(\"twitter4j.oauth.accessTokenSecret\", accessTokenSecret)\n\nval ssc = new StreamingContext(sc, Seconds(30))\n\nssc.checkpoint(\"d:/tmp/checkpoint\")\n\nval filters = Seq(\"java\", \"scala\", \"spark\", \"hadoop\", \"kafka\", \"python\", \"flink\", \"nodejs\", \"docker\", \"tdd\")\n\nval tweets = TwitterUtils.createStream(ssc, None, filters)\n\nval tweetStatuses = tweets.map(t => t.getText())\n\nval wordCount = tweetStatuses\n                    .flatMap(line => line.split(\" \"))\n                    .map(w => w.toLowerCase())\n                    .filter(w => Seq(\"java\", \"scala\", \"spark\", \"hadoop\", \"kafka\", \"python\", \"flink\", \"nodejs\", \"docker\", \"tdd\").contains(w))\n                    .map(word => (word,1))\n                    .reduceByKey(_+_)\n                    .map(item => item.swap)\n                    .transform(rdd => rdd.sortByKey(false))\n                    \n\nwordCount.repartition(1).print()\n\nssc.start()\n","dateUpdated":"2017-02-27T00:34:06-0500","config":{"tableHide":false,"colWidth":12,"editorMode":"ace/mode/scala","title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486670721901_1653728452","id":"20160825-135423_1775581826","dateCreated":"2017-02-09T03:05:21-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4147","dateFinished":"2017-02-27T00:34:34-0500","dateStarted":"2017-02-27T00:34:06-0500","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark._\nimport org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.storage.StorageLevel\nconsumerKey: String = MYhSeverFcNomsZVK9rf97rtL\nconsumerSecret: String = PUr7MkkJQhFhO2Rb3CTax7NaZUpjHIVwQ5GcaQHad4QgmA7kNK\naccessToken: String = 829721281968877569-e8b48xjJDNRMALDPZwyU6Dl2VSIq2JQ\naccessTokenSecret: String = 0lk1ohTrHJeWUHhn76hlo4N5U16tIgM6A9Dm2Y8EKYuZp\nres7: String = MYhSeverFcNomsZVK9rf97rtL\nres8: String = PUr7MkkJQhFhO2Rb3CTax7NaZUpjHIVwQ5GcaQHad4QgmA7kNK\nres9: String = 829721281968877569-e8b48xjJDNRMALDPZwyU6Dl2VSIq2JQ\nres10: String = 0lk1ohTrHJeWUHhn76hlo4N5U16tIgM6A9Dm2Y8EKYuZp\nssc: org.apache.spark.streaming.StreamingContext = org.apache.spark.streaming.StreamingContext@563e150f\nfilters: Seq[String] = List(java, scala, spark, hadoop, kafka, python, flink, nodejs, docker, tdd)\ntweets: org.apache.spark.streaming.dstream.ReceiverInputDStream[twitter4j.Status] = org.apache.spark.streaming.twitter.TwitterInputDStream@7eac1721\ntweetStatuses: org.apache.spark.streaming.dstream.DStream[String] = org.apache.spark.streaming.dstream.MappedDStream@492aec6e\nwordCount: org.apache.spark.streaming.dstream.DStream[(Int, String)] = org.apache.spark.streaming.dstream.TransformedDStream@30628d75\n"},"focus":true},{"text":"%spark\n\nssc.stop(stopSparkContext=false, stopGracefully=true)\n","dateUpdated":"2017-02-27T00:35:40-0500","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486670721901_1653728452","id":"20160825-133825_16834077","dateCreated":"2017-02-09T03:05:21-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4148","dateFinished":"2017-02-27T00:37:00-0500","dateStarted":"2017-02-27T00:35:40-0500","result":{"code":"SUCCESS","type":"TEXT","msg":""},"focus":true},{"dateUpdated":"2017-02-09T03:05:21-0500","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486670721901_1653728452","id":"20160830-151349_1041624973","dateCreated":"2017-02-09T03:05:21-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4149"}],"name":"Spark Streaming Example 1 - Twitter Access","id":"2CBCUZ4C6","angularObjects":{"2C14DCYPT:shared_process":[],"2BXE9YPBX:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}